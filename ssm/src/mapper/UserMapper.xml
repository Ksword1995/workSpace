<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.UserDao">
	<!-- 只有管理员能登录 -->
	<select id="selectByUsernameAndPassword" parameterType="entity.User"
		resultType="entity.User">
		SELECT *
		FROM t_userInfo
		JOIN t_user ON t_userInfo.userId=t_user.userId
		WHERE t_userInfo.userId =#{userId}
		AND t_userInfo.password=#{password}
		AND t_user.roleId=1;
	</select>

	<!-- 检测是否重命名 -->
	<select id="selectByUserId" parameterType="String" resultType="entity.User">
		select id
		from t_userInfo
		where userId=#{userId}
	</select>
<!-- 	检测修改用户名重复 -->
	<select id="selectByUserId2" parameterType="String" resultType="entity.User">
		select *
		from t_userInfo
		where userId=#{userId}
	</select>
	
<!-- 	显示修改 -->
	<select id="selectUser" parameterType="String" resultType="entity.User">
		SELECT DISTINCT t_userInfo.*,t_role.id 'roleName'
		FROM t_userInfo
		JOIN t_user ON t_userInfo.userId=t_user.userId
		JOIN t_role ON t_role.id=t_user.roleId
		where t_userInfo.userId=#{userId};
	</select>
	
<!-- 	检测删除权限 -->
	<select id="selectCreateRole" parameterType="String" resultType="String">
		select createRole
		from t_userInfo
		where userId=#{userId}
	</select>

	<!-- 查询所有用户 -->
	<select id="selectAll" resultType="entity.User">
		SELECT DISTINCT t_userInfo.*,t_role.id 'roleName'
		FROM t_userInfo
		JOIN t_user ON t_userInfo.userId=t_user.userId
		JOIN t_role ON t_role.id=t_user.roleId
		ORDER BY id ;
	</select>
	

	<!-- 插入用户 -->
	<insert id="insertIntoUser" parameterType="entity.User">
		insert
		into
		t_userInfo(userId,password,sex,name,birth,edu,sal,local,createRole)
		values
		(#{userId},#{password},#{sex},#{name},#{birth},#{edu},#{sal},#{local},#{createRole})
	</insert>
	<!-- 插入用户角色,默认权限为一般用户 -->
	<insert id="insertIntoRole" parameterType="entity.User">
		insert
		into
		t_user(userId,roleId)
		values
		(#{userId},'2')
	</insert>

	<delete id="deleteUser" parameterType="String">
		delete from t_userInfo
		where userId=#{id}
	</delete>

	<delete id="deleteUserRole" parameterType="String">
		delete from t_user
		where userId=#{id}
	</delete>
	
	
	
	<update id="updateUser">
		update t_userInfo
		set password=#{password},sex=#{sex}
		,name=#{name},birth=#{birth},edu=#{edu}
		,sal=#{sal},local=#{local},createRole=#{createRole}
		where id=#{id}
		
	</update>
	
	
	<update id="updateUserRole">
		update t_user
		set roleId=#{roleName}
		where userId=#{userId}
		
	</update>
	
	

</mapper>
